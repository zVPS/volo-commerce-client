<?php
/**
 * ProductBean
 *
 * PHP version 5
 *
 * @category Class
 * @package  \VoloCommerce\Api\v1
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Volo Public APIs
 *
 * Volo Public APIs
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace VoloCommerce\Api\v1\Model;

use \ArrayAccess;

/**
 * ProductBean Class Doc Comment
 *
 * @category    Class
 * @package     \VoloCommerce\Api\v1
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ProductBean implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'ProductBean';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'stock_number' => 'string',
        'title' => 'string',
        'subtitle' => 'string',
        'listing_title' => 'string',
        'stock_level' => 'int',
        'tax_code' => 'string',
        'description' => 'string',
        'description2' => 'string',
        'description3' => 'string',
        'description4' => 'string',
        'description5' => 'string',
        'weight' => '\VoloCommerce\Api\v1\Model\Weight',
        'width' => '\VoloCommerce\Api\v1\Model\Width',
        'height' => '\VoloCommerce\Api\v1\Model\Height',
        'depth' => '\VoloCommerce\Api\v1\Model\Depth',
        'allow_pre_order' => 'string',
        'upc' => 'string',
        'publisher' => 'string',
        'isbn' => 'string',
        'notes' => 'string',
        'supplier' => 'string',
        'cost_price' => 'double',
        'default_delivery_location' => 'string',
        'supplier_sku' => 'string',
        'rrp2' => 'double',
        'rrp3' => 'double',
        'rrp' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'stock_number' => null,
        'title' => null,
        'subtitle' => null,
        'listing_title' => null,
        'stock_level' => 'int32',
        'tax_code' => null,
        'description' => null,
        'description2' => null,
        'description3' => null,
        'description4' => null,
        'description5' => null,
        'weight' => null,
        'width' => null,
        'height' => null,
        'depth' => null,
        'allow_pre_order' => null,
        'upc' => null,
        'publisher' => null,
        'isbn' => null,
        'notes' => null,
        'supplier' => null,
        'cost_price' => 'double',
        'default_delivery_location' => null,
        'supplier_sku' => null,
        'rrp2' => 'double',
        'rrp3' => 'double',
        'rrp' => 'double'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'stock_number' => 'stockNumber',
        'title' => 'title',
        'subtitle' => 'subtitle',
        'listing_title' => 'listingTitle',
        'stock_level' => 'stockLevel',
        'tax_code' => 'taxCode',
        'description' => 'description',
        'description2' => 'description2',
        'description3' => 'description3',
        'description4' => 'description4',
        'description5' => 'description5',
        'weight' => 'weight',
        'width' => 'width',
        'height' => 'height',
        'depth' => 'depth',
        'allow_pre_order' => 'allowPreOrder',
        'upc' => 'upc',
        'publisher' => 'publisher',
        'isbn' => 'isbn',
        'notes' => 'notes',
        'supplier' => 'supplier',
        'cost_price' => 'costPrice',
        'default_delivery_location' => 'defaultDeliveryLocation',
        'supplier_sku' => 'supplierSKU',
        'rrp2' => 'rrp2',
        'rrp3' => 'rrp3',
        'rrp' => 'rrp'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'stock_number' => 'setStockNumber',
        'title' => 'setTitle',
        'subtitle' => 'setSubtitle',
        'listing_title' => 'setListingTitle',
        'stock_level' => 'setStockLevel',
        'tax_code' => 'setTaxCode',
        'description' => 'setDescription',
        'description2' => 'setDescription2',
        'description3' => 'setDescription3',
        'description4' => 'setDescription4',
        'description5' => 'setDescription5',
        'weight' => 'setWeight',
        'width' => 'setWidth',
        'height' => 'setHeight',
        'depth' => 'setDepth',
        'allow_pre_order' => 'setAllowPreOrder',
        'upc' => 'setUpc',
        'publisher' => 'setPublisher',
        'isbn' => 'setIsbn',
        'notes' => 'setNotes',
        'supplier' => 'setSupplier',
        'cost_price' => 'setCostPrice',
        'default_delivery_location' => 'setDefaultDeliveryLocation',
        'supplier_sku' => 'setSupplierSku',
        'rrp2' => 'setRrp2',
        'rrp3' => 'setRrp3',
        'rrp' => 'setRrp'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'stock_number' => 'getStockNumber',
        'title' => 'getTitle',
        'subtitle' => 'getSubtitle',
        'listing_title' => 'getListingTitle',
        'stock_level' => 'getStockLevel',
        'tax_code' => 'getTaxCode',
        'description' => 'getDescription',
        'description2' => 'getDescription2',
        'description3' => 'getDescription3',
        'description4' => 'getDescription4',
        'description5' => 'getDescription5',
        'weight' => 'getWeight',
        'width' => 'getWidth',
        'height' => 'getHeight',
        'depth' => 'getDepth',
        'allow_pre_order' => 'getAllowPreOrder',
        'upc' => 'getUpc',
        'publisher' => 'getPublisher',
        'isbn' => 'getIsbn',
        'notes' => 'getNotes',
        'supplier' => 'getSupplier',
        'cost_price' => 'getCostPrice',
        'default_delivery_location' => 'getDefaultDeliveryLocation',
        'supplier_sku' => 'getSupplierSku',
        'rrp2' => 'getRrp2',
        'rrp3' => 'getRrp3',
        'rrp' => 'getRrp'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['stock_number'] = isset($data['stock_number']) ? $data['stock_number'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['subtitle'] = isset($data['subtitle']) ? $data['subtitle'] : null;
        $this->container['listing_title'] = isset($data['listing_title']) ? $data['listing_title'] : null;
        $this->container['stock_level'] = isset($data['stock_level']) ? $data['stock_level'] : null;
        $this->container['tax_code'] = isset($data['tax_code']) ? $data['tax_code'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['description2'] = isset($data['description2']) ? $data['description2'] : null;
        $this->container['description3'] = isset($data['description3']) ? $data['description3'] : null;
        $this->container['description4'] = isset($data['description4']) ? $data['description4'] : null;
        $this->container['description5'] = isset($data['description5']) ? $data['description5'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['width'] = isset($data['width']) ? $data['width'] : null;
        $this->container['height'] = isset($data['height']) ? $data['height'] : null;
        $this->container['depth'] = isset($data['depth']) ? $data['depth'] : null;
        $this->container['allow_pre_order'] = isset($data['allow_pre_order']) ? $data['allow_pre_order'] : null;
        $this->container['upc'] = isset($data['upc']) ? $data['upc'] : null;
        $this->container['publisher'] = isset($data['publisher']) ? $data['publisher'] : null;
        $this->container['isbn'] = isset($data['isbn']) ? $data['isbn'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['supplier'] = isset($data['supplier']) ? $data['supplier'] : null;
        $this->container['cost_price'] = isset($data['cost_price']) ? $data['cost_price'] : null;
        $this->container['default_delivery_location'] = isset($data['default_delivery_location']) ? $data['default_delivery_location'] : null;
        $this->container['supplier_sku'] = isset($data['supplier_sku']) ? $data['supplier_sku'] : null;
        $this->container['rrp2'] = isset($data['rrp2']) ? $data['rrp2'] : null;
        $this->container['rrp3'] = isset($data['rrp3']) ? $data['rrp3'] : null;
        $this->container['rrp'] = isset($data['rrp']) ? $data['rrp'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets stock_number
     * @return string
     */
    public function getStockNumber()
    {
        return $this->container['stock_number'];
    }

    /**
     * Sets stock_number
     * @param string $stock_number
     * @return $this
     */
    public function setStockNumber($stock_number)
    {
        $this->container['stock_number'] = $stock_number;

        return $this;
    }

    /**
     * Gets title
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     * @param string $title
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets subtitle
     * @return string
     */
    public function getSubtitle()
    {
        return $this->container['subtitle'];
    }

    /**
     * Sets subtitle
     * @param string $subtitle
     * @return $this
     */
    public function setSubtitle($subtitle)
    {
        $this->container['subtitle'] = $subtitle;

        return $this;
    }

    /**
     * Gets listing_title
     * @return string
     */
    public function getListingTitle()
    {
        return $this->container['listing_title'];
    }

    /**
     * Sets listing_title
     * @param string $listing_title
     * @return $this
     */
    public function setListingTitle($listing_title)
    {
        $this->container['listing_title'] = $listing_title;

        return $this;
    }

    /**
     * Gets stock_level
     * @return int
     */
    public function getStockLevel()
    {
        return $this->container['stock_level'];
    }

    /**
     * Sets stock_level
     * @param int $stock_level
     * @return $this
     */
    public function setStockLevel($stock_level)
    {
        $this->container['stock_level'] = $stock_level;

        return $this;
    }

    /**
     * Gets tax_code
     * @return string
     */
    public function getTaxCode()
    {
        return $this->container['tax_code'];
    }

    /**
     * Sets tax_code
     * @param string $tax_code
     * @return $this
     */
    public function setTaxCode($tax_code)
    {
        $this->container['tax_code'] = $tax_code;

        return $this;
    }

    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     * @param string $description
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets description2
     * @return string
     */
    public function getDescription2()
    {
        return $this->container['description2'];
    }

    /**
     * Sets description2
     * @param string $description2
     * @return $this
     */
    public function setDescription2($description2)
    {
        $this->container['description2'] = $description2;

        return $this;
    }

    /**
     * Gets description3
     * @return string
     */
    public function getDescription3()
    {
        return $this->container['description3'];
    }

    /**
     * Sets description3
     * @param string $description3
     * @return $this
     */
    public function setDescription3($description3)
    {
        $this->container['description3'] = $description3;

        return $this;
    }

    /**
     * Gets description4
     * @return string
     */
    public function getDescription4()
    {
        return $this->container['description4'];
    }

    /**
     * Sets description4
     * @param string $description4
     * @return $this
     */
    public function setDescription4($description4)
    {
        $this->container['description4'] = $description4;

        return $this;
    }

    /**
     * Gets description5
     * @return string
     */
    public function getDescription5()
    {
        return $this->container['description5'];
    }

    /**
     * Sets description5
     * @param string $description5
     * @return $this
     */
    public function setDescription5($description5)
    {
        $this->container['description5'] = $description5;

        return $this;
    }

    /**
     * Gets weight
     * @return \VoloCommerce\Api\v1\Model\Weight
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     * @param \VoloCommerce\Api\v1\Model\Weight $weight
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets width
     * @return \VoloCommerce\Api\v1\Model\Width
     */
    public function getWidth()
    {
        return $this->container['width'];
    }

    /**
     * Sets width
     * @param \VoloCommerce\Api\v1\Model\Width $width
     * @return $this
     */
    public function setWidth($width)
    {
        $this->container['width'] = $width;

        return $this;
    }

    /**
     * Gets height
     * @return \VoloCommerce\Api\v1\Model\Height
     */
    public function getHeight()
    {
        return $this->container['height'];
    }

    /**
     * Sets height
     * @param \VoloCommerce\Api\v1\Model\Height $height
     * @return $this
     */
    public function setHeight($height)
    {
        $this->container['height'] = $height;

        return $this;
    }

    /**
     * Gets depth
     * @return \VoloCommerce\Api\v1\Model\Depth
     */
    public function getDepth()
    {
        return $this->container['depth'];
    }

    /**
     * Sets depth
     * @param \VoloCommerce\Api\v1\Model\Depth $depth
     * @return $this
     */
    public function setDepth($depth)
    {
        $this->container['depth'] = $depth;

        return $this;
    }

    /**
     * Gets allow_pre_order
     * @return string
     */
    public function getAllowPreOrder()
    {
        return $this->container['allow_pre_order'];
    }

    /**
     * Sets allow_pre_order
     * @param string $allow_pre_order
     * @return $this
     */
    public function setAllowPreOrder($allow_pre_order)
    {
        $this->container['allow_pre_order'] = $allow_pre_order;

        return $this;
    }

    /**
     * Gets upc
     * @return string
     */
    public function getUpc()
    {
        return $this->container['upc'];
    }

    /**
     * Sets upc
     * @param string $upc
     * @return $this
     */
    public function setUpc($upc)
    {
        $this->container['upc'] = $upc;

        return $this;
    }

    /**
     * Gets publisher
     * @return string
     */
    public function getPublisher()
    {
        return $this->container['publisher'];
    }

    /**
     * Sets publisher
     * @param string $publisher
     * @return $this
     */
    public function setPublisher($publisher)
    {
        $this->container['publisher'] = $publisher;

        return $this;
    }

    /**
     * Gets isbn
     * @return string
     */
    public function getIsbn()
    {
        return $this->container['isbn'];
    }

    /**
     * Sets isbn
     * @param string $isbn
     * @return $this
     */
    public function setIsbn($isbn)
    {
        $this->container['isbn'] = $isbn;

        return $this;
    }

    /**
     * Gets notes
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     * @param string $notes
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets supplier
     * @return string
     */
    public function getSupplier()
    {
        return $this->container['supplier'];
    }

    /**
     * Sets supplier
     * @param string $supplier
     * @return $this
     */
    public function setSupplier($supplier)
    {
        $this->container['supplier'] = $supplier;

        return $this;
    }

    /**
     * Gets cost_price
     * @return double
     */
    public function getCostPrice()
    {
        return $this->container['cost_price'];
    }

    /**
     * Sets cost_price
     * @param double $cost_price
     * @return $this
     */
    public function setCostPrice($cost_price)
    {
        $this->container['cost_price'] = $cost_price;

        return $this;
    }

    /**
     * Gets default_delivery_location
     * @return string
     */
    public function getDefaultDeliveryLocation()
    {
        return $this->container['default_delivery_location'];
    }

    /**
     * Sets default_delivery_location
     * @param string $default_delivery_location
     * @return $this
     */
    public function setDefaultDeliveryLocation($default_delivery_location)
    {
        $this->container['default_delivery_location'] = $default_delivery_location;

        return $this;
    }

    /**
     * Gets supplier_sku
     * @return string
     */
    public function getSupplierSku()
    {
        return $this->container['supplier_sku'];
    }

    /**
     * Sets supplier_sku
     * @param string $supplier_sku
     * @return $this
     */
    public function setSupplierSku($supplier_sku)
    {
        $this->container['supplier_sku'] = $supplier_sku;

        return $this;
    }

    /**
     * Gets rrp2
     * @return double
     */
    public function getRrp2()
    {
        return $this->container['rrp2'];
    }

    /**
     * Sets rrp2
     * @param double $rrp2
     * @return $this
     */
    public function setRrp2($rrp2)
    {
        $this->container['rrp2'] = $rrp2;

        return $this;
    }

    /**
     * Gets rrp3
     * @return double
     */
    public function getRrp3()
    {
        return $this->container['rrp3'];
    }

    /**
     * Sets rrp3
     * @param double $rrp3
     * @return $this
     */
    public function setRrp3($rrp3)
    {
        $this->container['rrp3'] = $rrp3;

        return $this;
    }

    /**
     * Gets rrp
     * @return double
     */
    public function getRrp()
    {
        return $this->container['rrp'];
    }

    /**
     * Sets rrp
     * @param double $rrp
     * @return $this
     */
    public function setRrp($rrp)
    {
        $this->container['rrp'] = $rrp;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\VoloCommerce\Api\v1\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\VoloCommerce\Api\v1\ObjectSerializer::sanitizeForSerialization($this));
    }
}


