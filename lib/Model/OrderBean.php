<?php
/**
 * OrderBean
 *
 * PHP version 5
 *
 * @category Class
 * @package  \VoloCommerce\Api\v1
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Volo Public APIs
 *
 * Volo Public APIs
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace VoloCommerce\Api\v1\Model;

use \ArrayAccess;

/**
 * OrderBean Class Doc Comment
 *
 * @category    Class
 * @package     \VoloCommerce\Api\v1
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class OrderBean implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'OrderBean';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'order_type' => 'string',
        'order_source' => 'string',
        'esp_order_no' => 'int',
        'invoice_number' => 'string',
        'external_reference' => 'string',
        'date' => '\DateTime',
        'customer_company' => 'string',
        'customer_name' => 'string',
        'customer_address1' => 'string',
        'customer_address2' => 'string',
        'customer_address3' => 'string',
        'customer_city' => 'string',
        'customer_county' => 'string',
        'customer_postcode' => 'string',
        'customer_country' => 'string',
        'customer_email' => 'string',
        'customer_telephone' => 'string',
        'customer_fax' => 'string',
        'customer_reference' => 'string',
        'customer_notes' => 'string',
        'delivery_company' => 'string',
        'delivery_name' => 'string',
        'delivery_address1' => 'string',
        'delivery_address2' => 'string',
        'delivery_address3' => 'string',
        'delivery_city' => 'string',
        'delivery_county' => 'string',
        'delivery_postcode' => 'string',
        'delivery_country' => 'string',
        'delivery_telephone' => 'string',
        'shipping_method' => 'string',
        'shipping_cost' => 'float',
        'insurance' => 'float',
        'discount' => 'float',
        'voucher_code' => 'string',
        'order_total' => 'float',
        'payment_complete' => 'bool',
        'payments' => '\VoloCommerce\Api\v1\Model\PaymentsBean',
        'currency_code' => 'string',
        'exchange_rate' => 'double',
        'seller_username' => 'string',
        'seller_id' => 'int',
        'courier_profile_name' => 'string',
        'buyer_id' => 'string',
        'order_items' => '\VoloCommerce\Api\v1\Model\OrderItems',
        'store_id' => 'string',
        'ship_to_store' => 'string',
        'order_credits' => '\VoloCommerce\Api\v1\Model\OrderCredits',
        'order_status' => 'string',
        'flag1' => 'string',
        'flag2' => 'string',
        'courier_name' => 'string',
        'courier_service' => 'string',
        'courier_service_code' => 'string',
        'fulfilment_type' => 'string',
        'web_order_id' => 'int',
        'shipping_date' => '\DateTime',
        'invoice_date' => '\DateTime',
        'trade_sale' => 'bool',
        'courier_tracking' => 'string',
        'actual_courier_cost' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'order_type' => null,
        'order_source' => null,
        'esp_order_no' => 'int32',
        'invoice_number' => null,
        'external_reference' => null,
        'date' => 'date-time',
        'customer_company' => null,
        'customer_name' => null,
        'customer_address1' => null,
        'customer_address2' => null,
        'customer_address3' => null,
        'customer_city' => null,
        'customer_county' => null,
        'customer_postcode' => null,
        'customer_country' => null,
        'customer_email' => null,
        'customer_telephone' => null,
        'customer_fax' => null,
        'customer_reference' => null,
        'customer_notes' => null,
        'delivery_company' => null,
        'delivery_name' => null,
        'delivery_address1' => null,
        'delivery_address2' => null,
        'delivery_address3' => null,
        'delivery_city' => null,
        'delivery_county' => null,
        'delivery_postcode' => null,
        'delivery_country' => null,
        'delivery_telephone' => null,
        'shipping_method' => null,
        'shipping_cost' => null,
        'insurance' => null,
        'discount' => null,
        'voucher_code' => null,
        'order_total' => null,
        'payment_complete' => null,
        'payments' => null,
        'currency_code' => null,
        'exchange_rate' => 'double',
        'seller_username' => null,
        'seller_id' => 'int32',
        'courier_profile_name' => null,
        'buyer_id' => null,
        'order_items' => null,
        'store_id' => null,
        'ship_to_store' => null,
        'order_credits' => null,
        'order_status' => null,
        'flag1' => null,
        'flag2' => null,
        'courier_name' => null,
        'courier_service' => null,
        'courier_service_code' => null,
        'fulfilment_type' => null,
        'web_order_id' => 'int64',
        'shipping_date' => 'date-time',
        'invoice_date' => 'date-time',
        'trade_sale' => null,
        'courier_tracking' => null,
        'actual_courier_cost' => 'double'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'order_type' => 'orderType',
        'order_source' => 'orderSource',
        'esp_order_no' => 'espOrderNo',
        'invoice_number' => 'invoiceNumber',
        'external_reference' => 'externalReference',
        'date' => 'date',
        'customer_company' => 'customerCompany',
        'customer_name' => 'customerName',
        'customer_address1' => 'customerAddress1',
        'customer_address2' => 'customerAddress2',
        'customer_address3' => 'customerAddress3',
        'customer_city' => 'customerCity',
        'customer_county' => 'customerCounty',
        'customer_postcode' => 'customerPostcode',
        'customer_country' => 'customerCountry',
        'customer_email' => 'customerEmail',
        'customer_telephone' => 'customerTelephone',
        'customer_fax' => 'customerFax',
        'customer_reference' => 'customerReference',
        'customer_notes' => 'customerNotes',
        'delivery_company' => 'deliveryCompany',
        'delivery_name' => 'deliveryName',
        'delivery_address1' => 'deliveryAddress1',
        'delivery_address2' => 'deliveryAddress2',
        'delivery_address3' => 'deliveryAddress3',
        'delivery_city' => 'deliveryCity',
        'delivery_county' => 'deliveryCounty',
        'delivery_postcode' => 'deliveryPostcode',
        'delivery_country' => 'deliveryCountry',
        'delivery_telephone' => 'deliveryTelephone',
        'shipping_method' => 'shippingMethod',
        'shipping_cost' => 'shippingCost',
        'insurance' => 'insurance',
        'discount' => 'discount',
        'voucher_code' => 'voucherCode',
        'order_total' => 'orderTotal',
        'payment_complete' => 'paymentComplete',
        'payments' => 'payments',
        'currency_code' => 'currencyCode',
        'exchange_rate' => 'exchangeRate',
        'seller_username' => 'sellerUsername',
        'seller_id' => 'sellerId',
        'courier_profile_name' => 'courierProfileName',
        'buyer_id' => 'buyerId',
        'order_items' => 'orderItems',
        'store_id' => 'storeId',
        'ship_to_store' => 'shipToStore',
        'order_credits' => 'orderCredits',
        'order_status' => 'orderStatus',
        'flag1' => 'flag1',
        'flag2' => 'flag2',
        'courier_name' => 'courierName',
        'courier_service' => 'courierService',
        'courier_service_code' => 'courierServiceCode',
        'fulfilment_type' => 'fulfilmentType',
        'web_order_id' => 'webOrderID',
        'shipping_date' => 'shippingDate',
        'invoice_date' => 'invoiceDate',
        'trade_sale' => 'tradeSale',
        'courier_tracking' => 'courierTracking',
        'actual_courier_cost' => 'actualCourierCost'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'order_type' => 'setOrderType',
        'order_source' => 'setOrderSource',
        'esp_order_no' => 'setEspOrderNo',
        'invoice_number' => 'setInvoiceNumber',
        'external_reference' => 'setExternalReference',
        'date' => 'setDate',
        'customer_company' => 'setCustomerCompany',
        'customer_name' => 'setCustomerName',
        'customer_address1' => 'setCustomerAddress1',
        'customer_address2' => 'setCustomerAddress2',
        'customer_address3' => 'setCustomerAddress3',
        'customer_city' => 'setCustomerCity',
        'customer_county' => 'setCustomerCounty',
        'customer_postcode' => 'setCustomerPostcode',
        'customer_country' => 'setCustomerCountry',
        'customer_email' => 'setCustomerEmail',
        'customer_telephone' => 'setCustomerTelephone',
        'customer_fax' => 'setCustomerFax',
        'customer_reference' => 'setCustomerReference',
        'customer_notes' => 'setCustomerNotes',
        'delivery_company' => 'setDeliveryCompany',
        'delivery_name' => 'setDeliveryName',
        'delivery_address1' => 'setDeliveryAddress1',
        'delivery_address2' => 'setDeliveryAddress2',
        'delivery_address3' => 'setDeliveryAddress3',
        'delivery_city' => 'setDeliveryCity',
        'delivery_county' => 'setDeliveryCounty',
        'delivery_postcode' => 'setDeliveryPostcode',
        'delivery_country' => 'setDeliveryCountry',
        'delivery_telephone' => 'setDeliveryTelephone',
        'shipping_method' => 'setShippingMethod',
        'shipping_cost' => 'setShippingCost',
        'insurance' => 'setInsurance',
        'discount' => 'setDiscount',
        'voucher_code' => 'setVoucherCode',
        'order_total' => 'setOrderTotal',
        'payment_complete' => 'setPaymentComplete',
        'payments' => 'setPayments',
        'currency_code' => 'setCurrencyCode',
        'exchange_rate' => 'setExchangeRate',
        'seller_username' => 'setSellerUsername',
        'seller_id' => 'setSellerId',
        'courier_profile_name' => 'setCourierProfileName',
        'buyer_id' => 'setBuyerId',
        'order_items' => 'setOrderItems',
        'store_id' => 'setStoreId',
        'ship_to_store' => 'setShipToStore',
        'order_credits' => 'setOrderCredits',
        'order_status' => 'setOrderStatus',
        'flag1' => 'setFlag1',
        'flag2' => 'setFlag2',
        'courier_name' => 'setCourierName',
        'courier_service' => 'setCourierService',
        'courier_service_code' => 'setCourierServiceCode',
        'fulfilment_type' => 'setFulfilmentType',
        'web_order_id' => 'setWebOrderId',
        'shipping_date' => 'setShippingDate',
        'invoice_date' => 'setInvoiceDate',
        'trade_sale' => 'setTradeSale',
        'courier_tracking' => 'setCourierTracking',
        'actual_courier_cost' => 'setActualCourierCost'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'order_type' => 'getOrderType',
        'order_source' => 'getOrderSource',
        'esp_order_no' => 'getEspOrderNo',
        'invoice_number' => 'getInvoiceNumber',
        'external_reference' => 'getExternalReference',
        'date' => 'getDate',
        'customer_company' => 'getCustomerCompany',
        'customer_name' => 'getCustomerName',
        'customer_address1' => 'getCustomerAddress1',
        'customer_address2' => 'getCustomerAddress2',
        'customer_address3' => 'getCustomerAddress3',
        'customer_city' => 'getCustomerCity',
        'customer_county' => 'getCustomerCounty',
        'customer_postcode' => 'getCustomerPostcode',
        'customer_country' => 'getCustomerCountry',
        'customer_email' => 'getCustomerEmail',
        'customer_telephone' => 'getCustomerTelephone',
        'customer_fax' => 'getCustomerFax',
        'customer_reference' => 'getCustomerReference',
        'customer_notes' => 'getCustomerNotes',
        'delivery_company' => 'getDeliveryCompany',
        'delivery_name' => 'getDeliveryName',
        'delivery_address1' => 'getDeliveryAddress1',
        'delivery_address2' => 'getDeliveryAddress2',
        'delivery_address3' => 'getDeliveryAddress3',
        'delivery_city' => 'getDeliveryCity',
        'delivery_county' => 'getDeliveryCounty',
        'delivery_postcode' => 'getDeliveryPostcode',
        'delivery_country' => 'getDeliveryCountry',
        'delivery_telephone' => 'getDeliveryTelephone',
        'shipping_method' => 'getShippingMethod',
        'shipping_cost' => 'getShippingCost',
        'insurance' => 'getInsurance',
        'discount' => 'getDiscount',
        'voucher_code' => 'getVoucherCode',
        'order_total' => 'getOrderTotal',
        'payment_complete' => 'getPaymentComplete',
        'payments' => 'getPayments',
        'currency_code' => 'getCurrencyCode',
        'exchange_rate' => 'getExchangeRate',
        'seller_username' => 'getSellerUsername',
        'seller_id' => 'getSellerId',
        'courier_profile_name' => 'getCourierProfileName',
        'buyer_id' => 'getBuyerId',
        'order_items' => 'getOrderItems',
        'store_id' => 'getStoreId',
        'ship_to_store' => 'getShipToStore',
        'order_credits' => 'getOrderCredits',
        'order_status' => 'getOrderStatus',
        'flag1' => 'getFlag1',
        'flag2' => 'getFlag2',
        'courier_name' => 'getCourierName',
        'courier_service' => 'getCourierService',
        'courier_service_code' => 'getCourierServiceCode',
        'fulfilment_type' => 'getFulfilmentType',
        'web_order_id' => 'getWebOrderId',
        'shipping_date' => 'getShippingDate',
        'invoice_date' => 'getInvoiceDate',
        'trade_sale' => 'getTradeSale',
        'courier_tracking' => 'getCourierTracking',
        'actual_courier_cost' => 'getActualCourierCost'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['order_type'] = isset($data['order_type']) ? $data['order_type'] : null;
        $this->container['order_source'] = isset($data['order_source']) ? $data['order_source'] : null;
        $this->container['esp_order_no'] = isset($data['esp_order_no']) ? $data['esp_order_no'] : null;
        $this->container['invoice_number'] = isset($data['invoice_number']) ? $data['invoice_number'] : null;
        $this->container['external_reference'] = isset($data['external_reference']) ? $data['external_reference'] : null;
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['customer_company'] = isset($data['customer_company']) ? $data['customer_company'] : null;
        $this->container['customer_name'] = isset($data['customer_name']) ? $data['customer_name'] : null;
        $this->container['customer_address1'] = isset($data['customer_address1']) ? $data['customer_address1'] : null;
        $this->container['customer_address2'] = isset($data['customer_address2']) ? $data['customer_address2'] : null;
        $this->container['customer_address3'] = isset($data['customer_address3']) ? $data['customer_address3'] : null;
        $this->container['customer_city'] = isset($data['customer_city']) ? $data['customer_city'] : null;
        $this->container['customer_county'] = isset($data['customer_county']) ? $data['customer_county'] : null;
        $this->container['customer_postcode'] = isset($data['customer_postcode']) ? $data['customer_postcode'] : null;
        $this->container['customer_country'] = isset($data['customer_country']) ? $data['customer_country'] : null;
        $this->container['customer_email'] = isset($data['customer_email']) ? $data['customer_email'] : null;
        $this->container['customer_telephone'] = isset($data['customer_telephone']) ? $data['customer_telephone'] : null;
        $this->container['customer_fax'] = isset($data['customer_fax']) ? $data['customer_fax'] : null;
        $this->container['customer_reference'] = isset($data['customer_reference']) ? $data['customer_reference'] : null;
        $this->container['customer_notes'] = isset($data['customer_notes']) ? $data['customer_notes'] : null;
        $this->container['delivery_company'] = isset($data['delivery_company']) ? $data['delivery_company'] : null;
        $this->container['delivery_name'] = isset($data['delivery_name']) ? $data['delivery_name'] : null;
        $this->container['delivery_address1'] = isset($data['delivery_address1']) ? $data['delivery_address1'] : null;
        $this->container['delivery_address2'] = isset($data['delivery_address2']) ? $data['delivery_address2'] : null;
        $this->container['delivery_address3'] = isset($data['delivery_address3']) ? $data['delivery_address3'] : null;
        $this->container['delivery_city'] = isset($data['delivery_city']) ? $data['delivery_city'] : null;
        $this->container['delivery_county'] = isset($data['delivery_county']) ? $data['delivery_county'] : null;
        $this->container['delivery_postcode'] = isset($data['delivery_postcode']) ? $data['delivery_postcode'] : null;
        $this->container['delivery_country'] = isset($data['delivery_country']) ? $data['delivery_country'] : null;
        $this->container['delivery_telephone'] = isset($data['delivery_telephone']) ? $data['delivery_telephone'] : null;
        $this->container['shipping_method'] = isset($data['shipping_method']) ? $data['shipping_method'] : null;
        $this->container['shipping_cost'] = isset($data['shipping_cost']) ? $data['shipping_cost'] : null;
        $this->container['insurance'] = isset($data['insurance']) ? $data['insurance'] : null;
        $this->container['discount'] = isset($data['discount']) ? $data['discount'] : null;
        $this->container['voucher_code'] = isset($data['voucher_code']) ? $data['voucher_code'] : null;
        $this->container['order_total'] = isset($data['order_total']) ? $data['order_total'] : null;
        $this->container['payment_complete'] = isset($data['payment_complete']) ? $data['payment_complete'] : null;
        $this->container['payments'] = isset($data['payments']) ? $data['payments'] : null;
        $this->container['currency_code'] = isset($data['currency_code']) ? $data['currency_code'] : null;
        $this->container['exchange_rate'] = isset($data['exchange_rate']) ? $data['exchange_rate'] : null;
        $this->container['seller_username'] = isset($data['seller_username']) ? $data['seller_username'] : null;
        $this->container['seller_id'] = isset($data['seller_id']) ? $data['seller_id'] : null;
        $this->container['courier_profile_name'] = isset($data['courier_profile_name']) ? $data['courier_profile_name'] : null;
        $this->container['buyer_id'] = isset($data['buyer_id']) ? $data['buyer_id'] : null;
        $this->container['order_items'] = isset($data['order_items']) ? $data['order_items'] : null;
        $this->container['store_id'] = isset($data['store_id']) ? $data['store_id'] : null;
        $this->container['ship_to_store'] = isset($data['ship_to_store']) ? $data['ship_to_store'] : null;
        $this->container['order_credits'] = isset($data['order_credits']) ? $data['order_credits'] : null;
        $this->container['order_status'] = isset($data['order_status']) ? $data['order_status'] : null;
        $this->container['flag1'] = isset($data['flag1']) ? $data['flag1'] : null;
        $this->container['flag2'] = isset($data['flag2']) ? $data['flag2'] : null;
        $this->container['courier_name'] = isset($data['courier_name']) ? $data['courier_name'] : null;
        $this->container['courier_service'] = isset($data['courier_service']) ? $data['courier_service'] : null;
        $this->container['courier_service_code'] = isset($data['courier_service_code']) ? $data['courier_service_code'] : null;
        $this->container['fulfilment_type'] = isset($data['fulfilment_type']) ? $data['fulfilment_type'] : null;
        $this->container['web_order_id'] = isset($data['web_order_id']) ? $data['web_order_id'] : null;
        $this->container['shipping_date'] = isset($data['shipping_date']) ? $data['shipping_date'] : null;
        $this->container['invoice_date'] = isset($data['invoice_date']) ? $data['invoice_date'] : null;
        $this->container['trade_sale'] = isset($data['trade_sale']) ? $data['trade_sale'] : null;
        $this->container['courier_tracking'] = isset($data['courier_tracking']) ? $data['courier_tracking'] : null;
        $this->container['actual_courier_cost'] = isset($data['actual_courier_cost']) ? $data['actual_courier_cost'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets order_type
     * @return string
     */
    public function getOrderType()
    {
        return $this->container['order_type'];
    }

    /**
     * Sets order_type
     * @param string $order_type
     * @return $this
     */
    public function setOrderType($order_type)
    {
        $this->container['order_type'] = $order_type;

        return $this;
    }

    /**
     * Gets order_source
     * @return string
     */
    public function getOrderSource()
    {
        return $this->container['order_source'];
    }

    /**
     * Sets order_source
     * @param string $order_source
     * @return $this
     */
    public function setOrderSource($order_source)
    {
        $this->container['order_source'] = $order_source;

        return $this;
    }

    /**
     * Gets esp_order_no
     * @return int
     */
    public function getEspOrderNo()
    {
        return $this->container['esp_order_no'];
    }

    /**
     * Sets esp_order_no
     * @param int $esp_order_no
     * @return $this
     */
    public function setEspOrderNo($esp_order_no)
    {
        $this->container['esp_order_no'] = $esp_order_no;

        return $this;
    }

    /**
     * Gets invoice_number
     * @return string
     */
    public function getInvoiceNumber()
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     * @param string $invoice_number
     * @return $this
     */
    public function setInvoiceNumber($invoice_number)
    {
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets external_reference
     * @return string
     */
    public function getExternalReference()
    {
        return $this->container['external_reference'];
    }

    /**
     * Sets external_reference
     * @param string $external_reference
     * @return $this
     */
    public function setExternalReference($external_reference)
    {
        $this->container['external_reference'] = $external_reference;

        return $this;
    }

    /**
     * Gets date
     * @return \DateTime
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     * @param \DateTime $date
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets customer_company
     * @return string
     */
    public function getCustomerCompany()
    {
        return $this->container['customer_company'];
    }

    /**
     * Sets customer_company
     * @param string $customer_company
     * @return $this
     */
    public function setCustomerCompany($customer_company)
    {
        $this->container['customer_company'] = $customer_company;

        return $this;
    }

    /**
     * Gets customer_name
     * @return string
     */
    public function getCustomerName()
    {
        return $this->container['customer_name'];
    }

    /**
     * Sets customer_name
     * @param string $customer_name
     * @return $this
     */
    public function setCustomerName($customer_name)
    {
        $this->container['customer_name'] = $customer_name;

        return $this;
    }

    /**
     * Gets customer_address1
     * @return string
     */
    public function getCustomerAddress1()
    {
        return $this->container['customer_address1'];
    }

    /**
     * Sets customer_address1
     * @param string $customer_address1
     * @return $this
     */
    public function setCustomerAddress1($customer_address1)
    {
        $this->container['customer_address1'] = $customer_address1;

        return $this;
    }

    /**
     * Gets customer_address2
     * @return string
     */
    public function getCustomerAddress2()
    {
        return $this->container['customer_address2'];
    }

    /**
     * Sets customer_address2
     * @param string $customer_address2
     * @return $this
     */
    public function setCustomerAddress2($customer_address2)
    {
        $this->container['customer_address2'] = $customer_address2;

        return $this;
    }

    /**
     * Gets customer_address3
     * @return string
     */
    public function getCustomerAddress3()
    {
        return $this->container['customer_address3'];
    }

    /**
     * Sets customer_address3
     * @param string $customer_address3
     * @return $this
     */
    public function setCustomerAddress3($customer_address3)
    {
        $this->container['customer_address3'] = $customer_address3;

        return $this;
    }

    /**
     * Gets customer_city
     * @return string
     */
    public function getCustomerCity()
    {
        return $this->container['customer_city'];
    }

    /**
     * Sets customer_city
     * @param string $customer_city
     * @return $this
     */
    public function setCustomerCity($customer_city)
    {
        $this->container['customer_city'] = $customer_city;

        return $this;
    }

    /**
     * Gets customer_county
     * @return string
     */
    public function getCustomerCounty()
    {
        return $this->container['customer_county'];
    }

    /**
     * Sets customer_county
     * @param string $customer_county
     * @return $this
     */
    public function setCustomerCounty($customer_county)
    {
        $this->container['customer_county'] = $customer_county;

        return $this;
    }

    /**
     * Gets customer_postcode
     * @return string
     */
    public function getCustomerPostcode()
    {
        return $this->container['customer_postcode'];
    }

    /**
     * Sets customer_postcode
     * @param string $customer_postcode
     * @return $this
     */
    public function setCustomerPostcode($customer_postcode)
    {
        $this->container['customer_postcode'] = $customer_postcode;

        return $this;
    }

    /**
     * Gets customer_country
     * @return string
     */
    public function getCustomerCountry()
    {
        return $this->container['customer_country'];
    }

    /**
     * Sets customer_country
     * @param string $customer_country
     * @return $this
     */
    public function setCustomerCountry($customer_country)
    {
        $this->container['customer_country'] = $customer_country;

        return $this;
    }

    /**
     * Gets customer_email
     * @return string
     */
    public function getCustomerEmail()
    {
        return $this->container['customer_email'];
    }

    /**
     * Sets customer_email
     * @param string $customer_email
     * @return $this
     */
    public function setCustomerEmail($customer_email)
    {
        $this->container['customer_email'] = $customer_email;

        return $this;
    }

    /**
     * Gets customer_telephone
     * @return string
     */
    public function getCustomerTelephone()
    {
        return $this->container['customer_telephone'];
    }

    /**
     * Sets customer_telephone
     * @param string $customer_telephone
     * @return $this
     */
    public function setCustomerTelephone($customer_telephone)
    {
        $this->container['customer_telephone'] = $customer_telephone;

        return $this;
    }

    /**
     * Gets customer_fax
     * @return string
     */
    public function getCustomerFax()
    {
        return $this->container['customer_fax'];
    }

    /**
     * Sets customer_fax
     * @param string $customer_fax
     * @return $this
     */
    public function setCustomerFax($customer_fax)
    {
        $this->container['customer_fax'] = $customer_fax;

        return $this;
    }

    /**
     * Gets customer_reference
     * @return string
     */
    public function getCustomerReference()
    {
        return $this->container['customer_reference'];
    }

    /**
     * Sets customer_reference
     * @param string $customer_reference
     * @return $this
     */
    public function setCustomerReference($customer_reference)
    {
        $this->container['customer_reference'] = $customer_reference;

        return $this;
    }

    /**
     * Gets customer_notes
     * @return string
     */
    public function getCustomerNotes()
    {
        return $this->container['customer_notes'];
    }

    /**
     * Sets customer_notes
     * @param string $customer_notes
     * @return $this
     */
    public function setCustomerNotes($customer_notes)
    {
        $this->container['customer_notes'] = $customer_notes;

        return $this;
    }

    /**
     * Gets delivery_company
     * @return string
     */
    public function getDeliveryCompany()
    {
        return $this->container['delivery_company'];
    }

    /**
     * Sets delivery_company
     * @param string $delivery_company
     * @return $this
     */
    public function setDeliveryCompany($delivery_company)
    {
        $this->container['delivery_company'] = $delivery_company;

        return $this;
    }

    /**
     * Gets delivery_name
     * @return string
     */
    public function getDeliveryName()
    {
        return $this->container['delivery_name'];
    }

    /**
     * Sets delivery_name
     * @param string $delivery_name
     * @return $this
     */
    public function setDeliveryName($delivery_name)
    {
        $this->container['delivery_name'] = $delivery_name;

        return $this;
    }

    /**
     * Gets delivery_address1
     * @return string
     */
    public function getDeliveryAddress1()
    {
        return $this->container['delivery_address1'];
    }

    /**
     * Sets delivery_address1
     * @param string $delivery_address1
     * @return $this
     */
    public function setDeliveryAddress1($delivery_address1)
    {
        $this->container['delivery_address1'] = $delivery_address1;

        return $this;
    }

    /**
     * Gets delivery_address2
     * @return string
     */
    public function getDeliveryAddress2()
    {
        return $this->container['delivery_address2'];
    }

    /**
     * Sets delivery_address2
     * @param string $delivery_address2
     * @return $this
     */
    public function setDeliveryAddress2($delivery_address2)
    {
        $this->container['delivery_address2'] = $delivery_address2;

        return $this;
    }

    /**
     * Gets delivery_address3
     * @return string
     */
    public function getDeliveryAddress3()
    {
        return $this->container['delivery_address3'];
    }

    /**
     * Sets delivery_address3
     * @param string $delivery_address3
     * @return $this
     */
    public function setDeliveryAddress3($delivery_address3)
    {
        $this->container['delivery_address3'] = $delivery_address3;

        return $this;
    }

    /**
     * Gets delivery_city
     * @return string
     */
    public function getDeliveryCity()
    {
        return $this->container['delivery_city'];
    }

    /**
     * Sets delivery_city
     * @param string $delivery_city
     * @return $this
     */
    public function setDeliveryCity($delivery_city)
    {
        $this->container['delivery_city'] = $delivery_city;

        return $this;
    }

    /**
     * Gets delivery_county
     * @return string
     */
    public function getDeliveryCounty()
    {
        return $this->container['delivery_county'];
    }

    /**
     * Sets delivery_county
     * @param string $delivery_county
     * @return $this
     */
    public function setDeliveryCounty($delivery_county)
    {
        $this->container['delivery_county'] = $delivery_county;

        return $this;
    }

    /**
     * Gets delivery_postcode
     * @return string
     */
    public function getDeliveryPostcode()
    {
        return $this->container['delivery_postcode'];
    }

    /**
     * Sets delivery_postcode
     * @param string $delivery_postcode
     * @return $this
     */
    public function setDeliveryPostcode($delivery_postcode)
    {
        $this->container['delivery_postcode'] = $delivery_postcode;

        return $this;
    }

    /**
     * Gets delivery_country
     * @return string
     */
    public function getDeliveryCountry()
    {
        return $this->container['delivery_country'];
    }

    /**
     * Sets delivery_country
     * @param string $delivery_country
     * @return $this
     */
    public function setDeliveryCountry($delivery_country)
    {
        $this->container['delivery_country'] = $delivery_country;

        return $this;
    }

    /**
     * Gets delivery_telephone
     * @return string
     */
    public function getDeliveryTelephone()
    {
        return $this->container['delivery_telephone'];
    }

    /**
     * Sets delivery_telephone
     * @param string $delivery_telephone
     * @return $this
     */
    public function setDeliveryTelephone($delivery_telephone)
    {
        $this->container['delivery_telephone'] = $delivery_telephone;

        return $this;
    }

    /**
     * Gets shipping_method
     * @return string
     */
    public function getShippingMethod()
    {
        return $this->container['shipping_method'];
    }

    /**
     * Sets shipping_method
     * @param string $shipping_method
     * @return $this
     */
    public function setShippingMethod($shipping_method)
    {
        $this->container['shipping_method'] = $shipping_method;

        return $this;
    }

    /**
     * Gets shipping_cost
     * @return float
     */
    public function getShippingCost()
    {
        return $this->container['shipping_cost'];
    }

    /**
     * Sets shipping_cost
     * @param float $shipping_cost
     * @return $this
     */
    public function setShippingCost($shipping_cost)
    {
        $this->container['shipping_cost'] = $shipping_cost;

        return $this;
    }

    /**
     * Gets insurance
     * @return float
     */
    public function getInsurance()
    {
        return $this->container['insurance'];
    }

    /**
     * Sets insurance
     * @param float $insurance
     * @return $this
     */
    public function setInsurance($insurance)
    {
        $this->container['insurance'] = $insurance;

        return $this;
    }

    /**
     * Gets discount
     * @return float
     */
    public function getDiscount()
    {
        return $this->container['discount'];
    }

    /**
     * Sets discount
     * @param float $discount
     * @return $this
     */
    public function setDiscount($discount)
    {
        $this->container['discount'] = $discount;

        return $this;
    }

    /**
     * Gets voucher_code
     * @return string
     */
    public function getVoucherCode()
    {
        return $this->container['voucher_code'];
    }

    /**
     * Sets voucher_code
     * @param string $voucher_code
     * @return $this
     */
    public function setVoucherCode($voucher_code)
    {
        $this->container['voucher_code'] = $voucher_code;

        return $this;
    }

    /**
     * Gets order_total
     * @return float
     */
    public function getOrderTotal()
    {
        return $this->container['order_total'];
    }

    /**
     * Sets order_total
     * @param float $order_total
     * @return $this
     */
    public function setOrderTotal($order_total)
    {
        $this->container['order_total'] = $order_total;

        return $this;
    }

    /**
     * Gets payment_complete
     * @return bool
     */
    public function getPaymentComplete()
    {
        return $this->container['payment_complete'];
    }

    /**
     * Sets payment_complete
     * @param bool $payment_complete
     * @return $this
     */
    public function setPaymentComplete($payment_complete)
    {
        $this->container['payment_complete'] = $payment_complete;

        return $this;
    }

    /**
     * Gets payments
     * @return \VoloCommerce\Api\v1\Model\PaymentsBean
     */
    public function getPayments()
    {
        return $this->container['payments'];
    }

    /**
     * Sets payments
     * @param \VoloCommerce\Api\v1\Model\PaymentsBean $payments
     * @return $this
     */
    public function setPayments($payments)
    {
        $this->container['payments'] = $payments;

        return $this;
    }

    /**
     * Gets currency_code
     * @return string
     */
    public function getCurrencyCode()
    {
        return $this->container['currency_code'];
    }

    /**
     * Sets currency_code
     * @param string $currency_code
     * @return $this
     */
    public function setCurrencyCode($currency_code)
    {
        $this->container['currency_code'] = $currency_code;

        return $this;
    }

    /**
     * Gets exchange_rate
     * @return double
     */
    public function getExchangeRate()
    {
        return $this->container['exchange_rate'];
    }

    /**
     * Sets exchange_rate
     * @param double $exchange_rate
     * @return $this
     */
    public function setExchangeRate($exchange_rate)
    {
        $this->container['exchange_rate'] = $exchange_rate;

        return $this;
    }

    /**
     * Gets seller_username
     * @return string
     */
    public function getSellerUsername()
    {
        return $this->container['seller_username'];
    }

    /**
     * Sets seller_username
     * @param string $seller_username
     * @return $this
     */
    public function setSellerUsername($seller_username)
    {
        $this->container['seller_username'] = $seller_username;

        return $this;
    }

    /**
     * Gets seller_id
     * @return int
     */
    public function getSellerId()
    {
        return $this->container['seller_id'];
    }

    /**
     * Sets seller_id
     * @param int $seller_id
     * @return $this
     */
    public function setSellerId($seller_id)
    {
        $this->container['seller_id'] = $seller_id;

        return $this;
    }

    /**
     * Gets courier_profile_name
     * @return string
     */
    public function getCourierProfileName()
    {
        return $this->container['courier_profile_name'];
    }

    /**
     * Sets courier_profile_name
     * @param string $courier_profile_name
     * @return $this
     */
    public function setCourierProfileName($courier_profile_name)
    {
        $this->container['courier_profile_name'] = $courier_profile_name;

        return $this;
    }

    /**
     * Gets buyer_id
     * @return string
     */
    public function getBuyerId()
    {
        return $this->container['buyer_id'];
    }

    /**
     * Sets buyer_id
     * @param string $buyer_id
     * @return $this
     */
    public function setBuyerId($buyer_id)
    {
        $this->container['buyer_id'] = $buyer_id;

        return $this;
    }

    /**
     * Gets order_items
     * @return \VoloCommerce\Api\v1\Model\OrderItems
     */
    public function getOrderItems()
    {
        return $this->container['order_items'];
    }

    /**
     * Sets order_items
     * @param \VoloCommerce\Api\v1\Model\OrderItems $order_items
     * @return $this
     */
    public function setOrderItems($order_items)
    {
        $this->container['order_items'] = $order_items;

        return $this;
    }

    /**
     * Gets store_id
     * @return string
     */
    public function getStoreId()
    {
        return $this->container['store_id'];
    }

    /**
     * Sets store_id
     * @param string $store_id
     * @return $this
     */
    public function setStoreId($store_id)
    {
        $this->container['store_id'] = $store_id;

        return $this;
    }

    /**
     * Gets ship_to_store
     * @return string
     */
    public function getShipToStore()
    {
        return $this->container['ship_to_store'];
    }

    /**
     * Sets ship_to_store
     * @param string $ship_to_store
     * @return $this
     */
    public function setShipToStore($ship_to_store)
    {
        $this->container['ship_to_store'] = $ship_to_store;

        return $this;
    }

    /**
     * Gets order_credits
     * @return \VoloCommerce\Api\v1\Model\OrderCredits
     */
    public function getOrderCredits()
    {
        return $this->container['order_credits'];
    }

    /**
     * Sets order_credits
     * @param \VoloCommerce\Api\v1\Model\OrderCredits $order_credits
     * @return $this
     */
    public function setOrderCredits($order_credits)
    {
        $this->container['order_credits'] = $order_credits;

        return $this;
    }

    /**
     * Gets order_status
     * @return string
     */
    public function getOrderStatus()
    {
        return $this->container['order_status'];
    }

    /**
     * Sets order_status
     * @param string $order_status
     * @return $this
     */
    public function setOrderStatus($order_status)
    {
        $this->container['order_status'] = $order_status;

        return $this;
    }

    /**
     * Gets flag1
     * @return string
     */
    public function getFlag1()
    {
        return $this->container['flag1'];
    }

    /**
     * Sets flag1
     * @param string $flag1
     * @return $this
     */
    public function setFlag1($flag1)
    {
        $this->container['flag1'] = $flag1;

        return $this;
    }

    /**
     * Gets flag2
     * @return string
     */
    public function getFlag2()
    {
        return $this->container['flag2'];
    }

    /**
     * Sets flag2
     * @param string $flag2
     * @return $this
     */
    public function setFlag2($flag2)
    {
        $this->container['flag2'] = $flag2;

        return $this;
    }

    /**
     * Gets courier_name
     * @return string
     */
    public function getCourierName()
    {
        return $this->container['courier_name'];
    }

    /**
     * Sets courier_name
     * @param string $courier_name
     * @return $this
     */
    public function setCourierName($courier_name)
    {
        $this->container['courier_name'] = $courier_name;

        return $this;
    }

    /**
     * Gets courier_service
     * @return string
     */
    public function getCourierService()
    {
        return $this->container['courier_service'];
    }

    /**
     * Sets courier_service
     * @param string $courier_service
     * @return $this
     */
    public function setCourierService($courier_service)
    {
        $this->container['courier_service'] = $courier_service;

        return $this;
    }

    /**
     * Gets courier_service_code
     * @return string
     */
    public function getCourierServiceCode()
    {
        return $this->container['courier_service_code'];
    }

    /**
     * Sets courier_service_code
     * @param string $courier_service_code
     * @return $this
     */
    public function setCourierServiceCode($courier_service_code)
    {
        $this->container['courier_service_code'] = $courier_service_code;

        return $this;
    }

    /**
     * Gets fulfilment_type
     * @return string
     */
    public function getFulfilmentType()
    {
        return $this->container['fulfilment_type'];
    }

    /**
     * Sets fulfilment_type
     * @param string $fulfilment_type
     * @return $this
     */
    public function setFulfilmentType($fulfilment_type)
    {
        $this->container['fulfilment_type'] = $fulfilment_type;

        return $this;
    }

    /**
     * Gets web_order_id
     * @return int
     */
    public function getWebOrderId()
    {
        return $this->container['web_order_id'];
    }

    /**
     * Sets web_order_id
     * @param int $web_order_id
     * @return $this
     */
    public function setWebOrderId($web_order_id)
    {
        $this->container['web_order_id'] = $web_order_id;

        return $this;
    }

    /**
     * Gets shipping_date
     * @return \DateTime
     */
    public function getShippingDate()
    {
        return $this->container['shipping_date'];
    }

    /**
     * Sets shipping_date
     * @param \DateTime $shipping_date
     * @return $this
     */
    public function setShippingDate($shipping_date)
    {
        $this->container['shipping_date'] = $shipping_date;

        return $this;
    }

    /**
     * Gets invoice_date
     * @return \DateTime
     */
    public function getInvoiceDate()
    {
        return $this->container['invoice_date'];
    }

    /**
     * Sets invoice_date
     * @param \DateTime $invoice_date
     * @return $this
     */
    public function setInvoiceDate($invoice_date)
    {
        $this->container['invoice_date'] = $invoice_date;

        return $this;
    }

    /**
     * Gets trade_sale
     * @return bool
     */
    public function getTradeSale()
    {
        return $this->container['trade_sale'];
    }

    /**
     * Sets trade_sale
     * @param bool $trade_sale
     * @return $this
     */
    public function setTradeSale($trade_sale)
    {
        $this->container['trade_sale'] = $trade_sale;

        return $this;
    }

    /**
     * Gets courier_tracking
     * @return string
     */
    public function getCourierTracking()
    {
        return $this->container['courier_tracking'];
    }

    /**
     * Sets courier_tracking
     * @param string $courier_tracking
     * @return $this
     */
    public function setCourierTracking($courier_tracking)
    {
        $this->container['courier_tracking'] = $courier_tracking;

        return $this;
    }

    /**
     * Gets actual_courier_cost
     * @return double
     */
    public function getActualCourierCost()
    {
        return $this->container['actual_courier_cost'];
    }

    /**
     * Sets actual_courier_cost
     * @param double $actual_courier_cost
     * @return $this
     */
    public function setActualCourierCost($actual_courier_cost)
    {
        $this->container['actual_courier_cost'] = $actual_courier_cost;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\VoloCommerce\Api\v1\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\VoloCommerce\Api\v1\ObjectSerializer::sanitizeForSerialization($this));
    }
}


